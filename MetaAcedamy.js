/* Simple Maths Test: –í —ç—Ç–æ–π –∑–∞–¥–∞—á–µ –≤—Å–ø–æ–º–Ω–∏–º –∫–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å —á–∏—Å–ª–∞–º–∏. –°–æ–∑–¥–∞–π —Ñ—É–Ω–∫—Ü–∏—é checkNumber, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –µ–≥–æ –ø–æ 3 –∫—Ä–∏—Ç–µ—Ä–∏—è–º:
–≠—Ç–æ —á–∏—Å–ª–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ?
–≠—Ç–æ —á–∏—Å–ª–æ –ø–∞—Ä–Ω–æ–µ?
–≠—Ç–æ —á–∏—Å–ª–æ –∫—Ä–∞—Ç–Ω–æ 10?
–§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å –º–∞—Å—Å–∏–≤ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ø—Ä–æ–≤–µ—Ä–æ–∫ –≤ –≤–∏–¥–µ –±—É–ª–µ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π: true –∏–ª–∏ false. –ù–∞–ø—Ä–∏–º–µ—Ä:
checkNumber(3); // [true, false, false]
checkNumber(10); // [true, true, true]
checkNumber(0); // [false, true, true]
checkNumber(-1); // [false, false, false] */

function checkNumber(number) {
    return [
      number > 0,
      number % 2 === 0,
      number % 10 === 0
    ];
}

console.log(checkNumber(3));
console.log(checkNumber(10));
console.log(checkNumber(0));
console.log(checkNumber(-1));


/* Array of Numbers: –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é createArray, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ N –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –≤—Å–µ —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ N –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ. 
–ï—Å–ª–∏ N = 0, –≤–µ—Ä–Ω–∏ –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤. –ù–∞–ø—Ä–∏–º–µ—Ä:
createArray(1); // [1]
createArray(3); // [1, 2, 3]
createArray(0); // [] */

function createArray(N) {
    let result = [];
    
    for (let i = 1; i <= N; i++) {
      result.push(i);
    }
  
    if (N === 0) {
      return []
    }
  
    return result;
  }
    
  console.log(createArray(1));
  console.log(createArray(3));
  console.log(createArray(0));


/* Array Plus Array: –í —ç—Ç–æ–π –∑–∞–¥–∞—á–µ —Ä–µ–∞–ª–∏–∑—É–π —Ñ—É–Ω–∫—Ü–∏—é getArraysSum, –ø—Ä–∏–Ω–∏–º–∞—é—â—É—é –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞ —á–∏—Å–µ–ª –æ–¥–∏–Ω–∞–∫–æ–≤–æ–π –¥–ª–∏–Ω—ã –∏ 
–≤–æ–∑–≤—Ä–∞—â–∞—é—â—É—é —Å—É–º–º—É –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —ç—Ç–∏—Ö –º–∞—Å—Å–∏–≤–æ–≤. –ù–∞–ø—Ä–∏–º–µ—Ä:
getArraysSum([1, 2], [3, 4]); // 10 (1 + 2 + 3 + 4)
getArraysSum([1, 2, 3, 4], [5, 6, 7, 8]); // 36
getArraysSum([], []); // 0 */


function getArraysSum(arr1, arr2) {
  let result  = 0;

  if (arr1.length === arr2.length) {
      for (let i = 0; i < arr1.length; i++) {
          result += arr1[i] + arr2[i];
      }
  }

  return result
}


console.log(getArraysSum([5, 5], [5, 5]));
console.log(getArraysSum([15, 25], [35, 15]));
console.log(getArraysSum([], []));


/* Combine Arrays: –†–µ–∞–ª–∏–∑—É–π —Ñ—É–Ω–∫—Ü–∏—é combineArrays, –∫–æ—Ç–æ—Ä–∞—è: –ø—Ä–∏–Ω–∏–º–∞–µ—Ç 2 –º–∞—Å—Å–∏–≤–∞ —á–∏—Å–µ–ª –æ–¥–∏–Ω–∞–∫–æ–≤–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ (first –∏ second); 
–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª, –≥–¥–µ result[i] ‚Äî —ç—Ç–æ —Å—É–º–º–∞ —á–∏—Å–µ–ª first[i] –∏ second[i]. –ù–∞–ø—Ä–∏–º–µ—Ä: 
combineArrays([1, 2, 5], [3, 6, 1]); // [4, 8, 6]
combineArrays([1], [6]); // [7]
combineArrays([], []); // [] */


function combineArrays(first, second) {
  let result = [];
    if(first.length === second.length) {
      for (let i = 0; i < first.length; i++) {
        result.push(first[i] + second[i]); 
      }
    }

    if(first.length !== second.length) {
      return false;
    }
  

  return result;
}


console.log(combineArrays([1, 2, 5], [3, 6, 1])); // [4, 8, 6]
console.log(combineArrays([1], [6])); // [7]
console.log(combineArrays([], [])); // []


/* Double Power: –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é doublePower, –∫–æ—Ç–æ—Ä–∞—è: –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ –º–æ—â–Ω–æ—Å—Ç–µ–π currentPowers;
–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ —Å —É–¥–≤–æ–µ–Ω–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –∏–∑ currentPowers.
–ï—Å–ª–∏ currentPowers –ø—É—Å—Ç, —Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤. –ù–∞–ø—Ä–∏–º–µ—Ä:
doublePower([100, 150, 200, 220]); // [200, 300, 400, 440]
doublePower([45, 34, 56, 67]); // [90, 68, 112, 134]
doublePower([]); // [] */


function doublePower(currentPowers) {
  let result = [];

    for (let i = 0; i < currentPowers.length; i++) {
      result.push(currentPowers[i] * 2);
    }

    if(currentPowers === 0) {
      return [];
    }

  return result;
}


console.log(doublePower([100, 150, 200, 220])); // [200, 300, 400, 440]
console.log(doublePower([45, 34, 56, 67])); // [90, 68, 112, 134]
console.log(doublePower([])); // []


/* Make Stickers: –ü–æ—Ä–∞ –∑–∞–ø—É—Å–∫–∞—Ç—å –º–∞—Å—Å–æ–≤–æ–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ —Ä–æ–±–æ—Ç–æ–≤ ü§ñ –ê —á—Ç–æ–±—ã —Ä–∞–±–æ—Ç—ã –Ω–∞ –ª–∏–Ω–∏–∏ —Å–æ–±–∏—Ä–∞–ª–∏—Å—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –∏—Ö –¥–µ—Ç–∞–ª–∏ –Ω—É–∂–Ω–æ –º–∞—Ä–∫–∏—Ä–æ–≤–∞—Ç—å.
–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é makeStickers, –∫–æ—Ç–æ—Ä–∞—è:
–ø—Ä–∏–Ω–∏–º–∞–µ—Ç —á–∏—Å–ª–æ detailsCount –∏ —Å—Ç—Ä–æ–∫—É robotPart;
–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫ –≤ —Ñ–æ—Ä–º–∞—Ç–µ {{robotPart}} detail #{{n}}, –Ω–∞–ø—Ä–∏–º–µ—Ä, Foot detail #1.
–ï—Å–ª–∏ detailsCount=0, —Ç–æ –≤–µ—Ä–Ω–∏ –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤. –ù–∞–ø—Ä–∏–º–µ—Ä:
makeStickers(3, 'Body'); // ['Body detail #1', 'Body detail #2', 'Body detail #3']
makeStickers(4, 'Head'); // ['Head detail #1', 'Head detail #2', 'Head detail #3', 'Head detail #4']
makeStickers(0, 'Foot'); // []*/


function makeStickers(detailsCount, robotPart) {
  let result = [];

  for (let i = 1; i <= detailsCount; i++) {
    result.push(`${robotPart + ' detail #' + i}`);  
  }

  return result;
}


console.log(makeStickers(3, 'Body')); // ['Body detail #1', 'Body detail #2', 'Body detail #3']
console.log(makeStickers(4, 'Head')); // ['Head detail #1', 'Head detail #2', 'Head detail #3', 'Head detail #4']
console.log(makeStickers(0, 'Foot')); // []


/* Decrypt Message: –°–æ–∑–¥–∞–π —Ñ—É–Ω–∫—Ü–∏—é decryptMessage, –∫–æ—Ç–æ—Ä–∞—è: –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ—á–∫—É message; 
–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—É—é —Å—Ç—Ä–æ—á–∫—É, –≥–¥–µ —Å–∏–º–≤–æ–ª—ã –∏–∑ message —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.
–ù–∞–ø—Ä–∏–º–µ—Ä:
// 'We like drinking tea!!!'
decryptMessage('!!!aet gniknird ekil eW');

// 'A coronavirus pandemic will be in 2020'
decryptMessage('0202 ni eb lliw cimednap surivanoroc A');*/


function decryptMessage(message) {
  let string = '';

  for (let i = message.length -1; i >= 0; i--) {
    string += message[i];
  }

  return string;
}

console.log(decryptMessage('!!!aet gniknird ekil eW'));// 'We like drinking tea!!!'
console.log(decryptMessage('0202 ni eb lliw cimednap surivanoroc A'));// 'A coronavirus pandemic will be in 2020'


/* Get juice: –û–¥–Ω–∞–∂–¥—ã –≤–µ–¥—É—â–∏–π –Ω–∞ —Å–≤–∞–¥—å–±–µ —Ä–µ—à–∏–ª —Ä–∞–∑–≤–ª–µ—á—å –≥–æ—Å—Ç–µ–π –∏ —É—Å—Ç–∞–Ω–æ–≤–∏–ª –ø—Ä–∞–≤–∏–ª–æ: –∫–∞–∂–¥—ã–π –≥–æ—Å—Ç—å –ø—Ä–æ–∏–∑–Ω–æ—Å–∏—Ç —Ç–æ—Å—Ç, 
–∏ –≤—Å–µ —Å–æ–±—Ä–∞–≤—à–∏–µ—Å—è –ø—å—é—Ç —Å–æ–∫ –∑–∞ –∑–¥–æ—Ä–æ–≤—å–µ –º–æ–ª–æ–¥—ã—Ö. –ù–∞–ø—Ä–∏–º–µ—Ä:
–∫–æ–≥–¥–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç –ø–µ—Ä–≤—ã–π –≥–æ—Å—Ç—å, –æ–Ω –ø—å–µ—Ç —Å–æ–∫ –≤ –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–µ;
–∫–æ–≥–¥–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç –≤—Ç–æ—Ä–æ–π ‚Äì –ø—å—é—Ç —Å–æ–∫ –≤–¥–≤–æ–µ–º;
—Ç—Ä–µ—Ç–∏–π ‚Äì –ø—å—é—Ç —Å–æ–∫ –≤—Ç—Ä–æ–µ–º –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ.
–ï—Å–ª–∏ –≥–æ—Å—Ç–µ–π 5, —Ç–æ –≤—Å–µ–≥–æ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è 15 –ø–æ—Ä—Ü–∏–π —Å–æ–∫–∞ (1+2+3+4+5). –ï—Å–ª–∏ 10, —Ç–æ 55 –ø–æ—Ä—Ü–∏–π —Å–æ–∫–∞ (1+2+3+...+10).
–†–µ–∞–ª–∏–∑—É–π —Ñ—É–Ω–∫—Ü–∏—é getJuice, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç numberOfGuests ‚Äì —Å–∫–æ–ª—å–∫–æ –≤—Å–µ–≥–æ –±—É–¥–µ—Ç –≥–æ—Å—Ç–µ–π –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ä—Ü–∏–π.
–ï—â–µ –ø—Ä–∏–º–µ—Ä—ã:
getJuice(0); // 0 - –Ω–µ—Ç –≥–æ—Å—Ç–µ–π ‚Äî –Ω–µ—Ç –∏ –ø–æ—Ä—Ü–∏–π
getJuice(2); // 1 + 2 = 3
getJuice(6); // 1 + 2 + 3 + 4 + 5 + 6 = 21*/


function getJuice(numberOfGuests) {
  let quantityOfGuests = 0; 


  for (let i = 0; i < numberOfGuests; numberOfGuests--) {
      quantityOfGuests += numberOfGuests;
  }


  if(quantityOfGuests === 0) {
    return 0;
  }


  return quantityOfGuests;
}


console.log(getJuice(0)); // 0 - –Ω–µ—Ç –≥–æ—Å—Ç–µ–π ‚Äî –Ω–µ—Ç –∏ –ø–æ—Ä—Ü–∏–π
console.log(getJuice(2)); // 1 + 2 = 3
console.log(getJuice(6)); // 1 + 2 + 3 + 4 + 5 + 6 = 21


/* Get Juice With Step: –ê —Ç–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–µ–º —Ü–∏–∫–ª —Å —à–∞–≥–æ–º üòé
–ö–∞–∫ —Ç—ã –∑–Ω–∞–µ—à—å, –¥–ª—è –∫–æ–Ω–∫—É—Ä—Å–∞ —Å –Ω–∞–ø–∏—Ç–∫–∞–º–∏ —Å–æ–∫–∞ –ø–æ–Ω–∞–¥–æ–±–∏–ª–æ—Å—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø–æ—Ä—Ü–∏–π. –ü–æ—Ç–æ–º—É –≤–µ–¥—É—â–∏–π —Ä–µ—à–∏–ª –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞.
–ú–æ–ª–æ–¥–æ–∂–µ–Ω—ã –≤—ã–±–∏—Ä–∞—é—Ç —Ü–µ–ª–æ–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ step, –∏ —Ç–µ–ø–µ—Ä—å —Ç–æ—Å—Ç –≥–æ–≤–æ—Ä–∏—Ç –Ω–µ –∫–∞–∂–¥—ã–π –≥–æ—Å—Ç—å, 
–∞ —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–π –∏ –∫–∞–∂–¥—ã–π –ø—Ä–∏—Ö–æ–¥—è—â–∏–π —á–µ—Ä–µ–∑ –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ (step) –≥–æ—Å—Ç–µ–π –ø–æ—Å–ª–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Ç–æ—Å—Ç–∞. 
–ü—Ä–∏ —ç—Ç–æ–º –ø–æ-–ø—Ä–µ–∂–Ω–µ–º—É —Å–æ–∫ –ø—å—é—Ç –≤—Å–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ. 
–ù–∞–ø—Ä–∏–º–µ—Ä:
–µ—Å–ª–∏ step = 1, —Ç–æ –ø–æ-–ø—Ä–µ–∂–Ω–µ–º—É —Ç–æ—Å—Ç –≥–æ–≤–æ—Ä–∏—Ç –∫–∞–∂–¥—ã–π –ø—Ä–∏—à–µ–¥—à–∏–π –≥–æ—Å—Ç—å;
–µ—Å–ª–∏ step = 2, —Ç–æ 1-–π, 3-–π, 5-–π –∏ —Ç.–ø.;
–µ—Å–ª–∏ step = 3, —Ç–æ 1-–π, 4-–π, 7-–π, 10-–π –∏ —Ç.–¥.
–†–µ–∞–ª–∏–∑—É–π —Ñ—É–Ω–∫—Ü–∏—é getDrinksWithStep, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç numberOfGuests –∏ step –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ä—Ü–∏–π.
–ï—â–µ –ø—Ä–∏–º–µ—Ä—ã:
getDrinksWithStep(10, 3); // 1 + 4 + 7 + 10 = 22
getDrinksWithStep(0, 5); // 0 - –Ω–µ–º–∞ –≥–æ—Å—Ç–µ–π ‚Äî –Ω–µ–º–∞ —ñ –ø–æ—Ä—Ü—ñ–π
getDrinksWithStep(5, 3); // 1 + 4 = 5
getDrinksWithStep(18, 10); // 1 + 11 = 12*/


function getDrinksWithStep(numberOfGuests, step) {
  let quantityOfGuest = 0;
  
  for (let i = 1; i <= numberOfGuests; i+= step) {
      quantityOfGuest += i;
  }
  
  
  return quantityOfGuest;
  }
  
  
  console.log(getDrinksWithStep(10, 3)); // 1 + 4 + 7 + 10 = 22
  console.log(getDrinksWithStep(0, 5)); // 0 - –Ω–µ—Ç –≥–æ—Å—Ç–µ–π ‚Äî –Ω–µ—Ç –∏ –ø–æ—Ä—Ü–∏–π
  console.log(getDrinksWithStep(5, 3)); // 1 + 4 = 5
  console.log(getDrinksWithStep(18, 10)); // 1 + 11 = 12


  /* Is Sorted: –¢–µ–ø–µ—Ä—å –Ω–∞—É—á–∏–º –Ω–∞—à–∏—Ö —Ä–æ–±–æ—Ç–æ–≤ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ—Ä–æ–±–∫–∏ –Ω–∞ —Å–∫–ª–∞–¥–µ. –ö–æ–∂–Ω–∞—è –∫–æ—Ä–æ–±–∫–∞ –∏–º–µ–µ—Ç —Å–≤–æ–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä,
  –∞ —Ä–∞–±–æ—Ç—ã —É—á–∞—Ç—Å—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ –ø–æ—Ä—è–¥–∫—É —Ä–æ—Å—Ç–∞. –ù–æ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ ‚Äì –¥–µ–ª–æ –Ω–µ–ª–µ–≥–∫–æ–µ, –∏–Ω–æ–≥–¥–∞ —Å–ª—É—á–∞—é—Ç—Å—è –æ—à–∏–±–∫–∏. 
  –ü–æ—ç—Ç–æ–º—É –Ω–∞–º –ø–æ–∫–∞ –ø—Ä–∏–¥–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä—è—Ç—å, –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ —Ä–æ–±–æ—Ç –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–ª –∫–æ—Ä–æ–±–∫–∏. –î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é isSorted, –∫–æ—Ç–æ—Ä–∞—è:
  –ø–æ–ª—É—á–∞–µ—Ç –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª boxNumbers;
  –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ –≤—Å–µ —á–∏—Å–ª–∞ –≤ –º–∞—Å—Å–∏–≤–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã –≤ –ø–æ—Ä—è–¥–∫–µ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—è, –∏–ª–∏ false ‚Äì –µ—Å–ª–∏ –Ω–µ—Ç.
üí°–ß–∏—Å–ª–∞ –≤ –º–∞—Å—Å–∏–≤–µ –º–æ–≥—É—Ç –ø–æ–≤—Ç–æ—Ä—è—Ç—å—Å—è. –ù–∞–ø—Ä–∏–º–µ—Ä: isSorted([1, 2, 3, 4, 5]); // true
  isSorted([0, 1, 1, 1, 2]); // true
  isSorted([1, 2, 11]); // true
  isSorted([5]); // true
  isSorted([]); // true
  isSorted([0, 3, 1, 2, 2, 2]); // false
  isSorted([1, 11, 2]); // false*/


  function isSorted(boxNumbers) {
    for (let i = 1; i < boxNumbers.length; i++) {
      if (boxNumbers[i] < boxNumbers[i - 1]) {
         true
         return false;
      }
    }
    return true
  }
      
  console.log(isSorted([1, 2, 3, 4, 5])); // true
  console.log(isSorted([0, 1, 1, 1, 2])); // true
  console.log(isSorted([1, 2, 11])); // true
  console.log(isSorted([5])); // true
  console.log(isSorted([])); // true
  console.log(isSorted([0, 3, 1, 2, 2, 2])); // false
  console.log(isSorted([1, 11, 2])); // false


  /* Remove Vowels: –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é removeVowels, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É doc –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É, –≥–¥–µ –≤—Å–µ –≥—Ä–æ–º–∫–∏–µ –±—É–∫–≤—ã —É–¥–∞–ª–µ–Ω—ã.
  –≥–ª–∞—Å–Ω—ã–º–∏ –±—É–∫–≤–∞–º–∏ —è–≤–ª—è—é—Ç—Å—è a, e, i, o, u, y, –∫–∞–∫ –º–∞–ª–µ–Ω—å–∫–∏–µ —Ç–∞–∫ –∏ –±–æ–ª—å—à–∏–µ. –ù–∞–ø—Ä–∏–º–µ—Ä:
  removeVowels('document'); // 'dcmnt'
  removeVowels('I like my boss'); // ' lk m bss'
  removeVowels('350 euro'); // '350 r'*/



  function removeVowels(doc) {
    let result = '';

  
    for(let i = 0; i < doc.length; i++) {
      if(!'aeiouy'.includes(doc[i].toLowerCase())) {
        result += doc[i];
      }
    }

  
    return result;
  }
  
  
  console.log(removeVowels('document')); // 'dcmnt'
  console.log(removeVowels('I like my boss')); // ' lk m bss'
  console.log(removeVowels('350 euro')); // '350 r'


  /* Compare Robots: –†–∞–±–æ—Ç—ã –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã. –ú–µ–¥–ª–µ–Ω–Ω—ã—Ö –º—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –Ω–∞ –∞–ø–≥—Ä–µ–π–¥. –°–ª—É–∂–±–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ Mate Post —Ö–æ—á–µ—Ç –∫—É–ø–∏—Ç—å —É –Ω–∞—Å –¥–µ—Å—è—Ç–æ–∫ —Ä–æ–±–æ—Ç–æ–≤ –¥–ª—è –ø–µ—Ä–µ–≤–æ–∑–∫–∏ –≥—Ä—É–∑–∞ –ø–æ –≥–æ—Ä–æ–¥—É. 
  –ê –¥–ª—è —ç—Ç–æ–≥–æ –∏–º –Ω—É–∂–Ω—ã —Ä–∞–±–æ—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –ø–µ—Ä–µ–≤–æ–∑–∏—Ç—å –∑–∞ –¥–µ–Ω—å –±–æ–ª—å—à–µ –≥—Ä—É–∑–∞.–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é compareRobots, –ø–æ–ª—É—á–∞—é—â—É—é –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞. 
  –ü–µ—Ä–≤—ã–π –º–∞—Å—Å–∏–≤ firstRobotResults ‚Äì —ç—Ç–æ –≤–µ—Å –≥—Ä—É–∑–æ–≤, –ø–µ—Ä–µ–≤–æ–∑–∏–º—ã—Ö –∑–∞ –¥–µ–Ω—å –ø–µ—Ä–≤—ã–º —Ä–æ–±–æ—Ç–æ–º, –≤—Ç–æ—Ä–æ–π secondRobotResults ‚Äì —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ, –≤—Ç–æ—Ä—ã–º.
  –ü—Ä–æ–≤–µ—Ä—å, –∫—Ç–æ –∏–∑ —Ä–æ–±–æ—Ç–æ–≤ –º–æ–∂–µ—Ç –ø–µ—Ä–µ–≤–µ–∑—Ç–∏ –±–æ–ª—å—à–µ –≥—Ä—É–∑–∞ –≤ –¥–µ–Ω—å, –∏ –≤–µ—Ä–Ω–∏ —Å—Ç—Ä–æ—á–∫—É —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–µ–π, –∫–æ–≥–æ –∏–∑ —Ä–æ–±–æ—Ç–æ–≤ —Å—Ç–æ–∏—Ç –∫—É–ø–∏—Ç—å:
  'First robot for sale!' - –µ—Å–ª–∏ –ø–µ—Ä–≤—ã–π —Ä–æ–±–æ—Ç –ø–µ—Ä–µ–≤–æ–∑–∏—Ç –±–æ–ª—å—à–µ –≥—Ä—É–∑–∞;
  'Second robot for sale!' - –µ—Å–ª–∏ –≤—Ç–æ—Ä–æ–π —Ä–æ–±–æ—Ç –ø–µ—Ä–µ–≤–æ–∑–∏—Ç –±–æ–ª—å—à–µ –≥—Ä—É–∑–∞;
  'Both robots for sale!' - –µ—Å–ª–∏ –æ–±–∞ —Ä–∞–±–æ—Ç—ã –ø–µ—Ä–µ–≤–æ–∑—è—Ç –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥—Ä—É–∑–∞. –ù–∞–ø—Ä–∏–º–µ—Ä:
  compareRobots([12, 4, 13], [1, 1, 4, 5, 12]); // 'First robot for sale!' (29 > 23)
  compareRobots([9, 7, 9], [1, 3, 4, 5, 12]); // 'Both robots for sale!' (25 = 25)
  compareRobots([1, 3, 4], [1, 1, 4, 5]); // 'Second robot for sale!' (8 < 11)*/


  function compareRobots(firstRobotResults,secondRobotResults) {
    let summRobot1 = 0;
    let summRobot2 = 0;
  
    for (let i = 0; i < firstRobotResults.length; i++) {
        summRobot1 += firstRobotResults[i];    
    }
  
  
    for (let i = 0; i < secondRobotResults.length; i++) {
      summRobot2 += secondRobotResults[i]; 
    }
  
    if (summRobot1 > summRobot2) {
      return 'First robot for sale!';
    }
    else if (summRobot1 === summRobot2) {
      return 'Both robots for sale!';
    }
    else {
      return 'Second robot for sale!';
    }
  
    //return summRobot1;
    //return summRobot2;
  
  }
  
  
  console.log(compareRobots([12, 4, 13], [1, 1, 4, 5, 12])); // 'First robot for sale!' (29 > 23)
  console.log(compareRobots([9, 7, 9], [1, 3, 4, 5, 12])); // 'Both robots for sale!' (25 = 25)
  console.log(compareRobots([1, 3, 4], [1, 1, 4, 5])); // 'Second robot for sale!' (8 < 11)